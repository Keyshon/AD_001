node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 20
        }
        dim {
          size: 88
        }
      }
    }
  }
}
node {
  name: "label"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "dropout"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "phase_train"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Conv1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377\024\000\000\000X\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/Reshape"
  op: "Reshape"
  input: "input"
  input: "Conv1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\014\000\000\000\010\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "Conv1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Conv1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv1/truncated_normal/mul"
  op: "Mul"
  input: "Conv1/truncated_normal/TruncatedNormal"
  input: "Conv1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/truncated_normal"
  op: "Add"
  input: "Conv1/truncated_normal/mul"
  input: "Conv1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/W1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/W1/Assign"
  op: "Assign"
  input: "Conv1/W1"
  input: "Conv1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/W1/read"
  op: "Identity"
  input: "Conv1/W1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "Conv1/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/B1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/B1/Assign"
  op: "Assign"
  input: "Conv1/B1"
  input: "Conv1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/B1/read"
  op: "Identity"
  input: "Conv1/B1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
}
node {
  name: "Conv1/Conv2D"
  op: "Conv2D"
  input: "Conv1/Reshape"
  input: "Conv1/W1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/add"
  op: "Add"
  input: "Conv1/Conv2D"
  input: "Conv1/B1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bn/beta/Assign"
  op: "Assign"
  input: "Conv1/bn/beta"
  input: "Conv1/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/beta/read"
  op: "Identity"
  input: "Conv1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
}
node {
  name: "Conv1/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv1/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bn/gamma/Assign"
  op: "Assign"
  input: "Conv1/bn/gamma"
  input: "Conv1/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/gamma/read"
  op: "Identity"
  input: "Conv1/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
}
node {
  name: "Conv1/bn/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/bn/moments/Mean"
  op: "Mean"
  input: "Conv1/add"
  input: "Conv1/bn/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/moments/StopGradient"
  op: "StopGradient"
  input: "Conv1/bn/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/moments/Sub"
  op: "Sub"
  input: "Conv1/add"
  input: "Conv1/bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/moments/shifted_mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/bn/moments/shifted_mean"
  op: "Mean"
  input: "Conv1/bn/moments/Sub"
  input: "Conv1/bn/moments/shifted_mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "Conv1/add"
  input: "Conv1/bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/moments/Mean_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/bn/moments/Mean_1"
  op: "Mean"
  input: "Conv1/bn/moments/SquaredDifference"
  input: "Conv1/bn/moments/Mean_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/moments/Square"
  op: "Square"
  input: "Conv1/bn/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/moments/variance"
  op: "Sub"
  input: "Conv1/bn/moments/Mean_1"
  input: "Conv1/bn/moments/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/moments/mean"
  op: "Add"
  input: "Conv1/bn/moments/shifted_mean"
  input: "Conv1/bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/moments/Squeeze"
  op: "Squeeze"
  input: "Conv1/bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Conv1/bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "Conv1/bn/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
        i: 1
        i: 2
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/Switch"
  op: "Switch"
  input: "phase_train"
  input: "phase_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv1/bn/cond/switch_t"
  op: "Identity"
  input: "Conv1/bn/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv1/bn/cond/switch_f"
  op: "Identity"
  input: "Conv1/bn/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Conv1/bn/cond/pred_id"
  op: "Identity"
  input: "phase_train"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
  input: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/read"
  op: "Identity"
  input: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
  input: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/read"
  op: "Identity"
  input: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/decay"
  op: "Const"
  input: "^Conv1/bn/cond/switch_t"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub/x"
  op: "Const"
  input: "^Conv1/bn/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub"
  op: "Sub"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub/x"
  input: "Conv1/bn/cond/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch"
  op: "Switch"
  input: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/read"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch_1"
  op: "Switch"
  input: "Conv1/bn/moments/Squeeze"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/moments/Squeeze"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch:1"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/mul"
  op: "Mul"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/Switch"
  op: "RefSwitch"
  input: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg"
  op: "AssignSub"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/Switch:1"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  op: "Const"
  input: "^Conv1/bn/cond/switch_t"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  input: "Conv1/bn/cond/ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch"
  op: "Switch"
  input: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/read"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch_1"
  op: "Switch"
  input: "Conv1/bn/moments/Squeeze_1"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/moments/Squeeze_1"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch:1"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/Switch"
  op: "RefSwitch"
  input: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1"
  op: "AssignSub"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/Switch:1"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Conv1/bn/cond/ExponentialMovingAverage"
  op: "NoOp"
  input: "^Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg"
  input: "^Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1"
  input: "^Conv1/bn/cond/switch_t"
}
node {
  name: "Conv1/bn/cond/Identity"
  op: "Identity"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch_1:1"
  input: "^Conv1/bn/cond/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/cond/Identity_1"
  op: "Identity"
  input: "Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch_1:1"
  input: "^Conv1/bn/cond/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/cond/Switch_1"
  op: "Switch"
  input: "bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/read"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/Switch_2"
  op: "Switch"
  input: "bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/read"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "Conv1/bn/cond/Merge"
  op: "Merge"
  input: "Conv1/bn/cond/Switch_1"
  input: "Conv1/bn/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/cond/Merge_1"
  op: "Merge"
  input: "Conv1/bn/cond/Switch_2"
  input: "Conv1/bn/cond/Identity_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/add"
  op: "Add"
  input: "Conv1/bn/cond/Merge_1"
  input: "Conv1/bn/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "Conv1/bn/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/mul"
  op: "Mul"
  input: "Conv1/bn/batchnorm/Rsqrt"
  input: "Conv1/bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/mul_1"
  op: "Mul"
  input: "Conv1/add"
  input: "Conv1/bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/mul_2"
  op: "Mul"
  input: "Conv1/bn/cond/Merge"
  input: "Conv1/bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/sub"
  op: "Sub"
  input: "Conv1/bn/beta/read"
  input: "Conv1/bn/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/bn/batchnorm/add_1"
  op: "Add"
  input: "Conv1/bn/batchnorm/mul_1"
  input: "Conv1/bn/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/Relu"
  op: "Relu"
  input: "Conv1/bn/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/Shape"
  op: "Shape"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv1/dropout/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/dropout/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv1/dropout/random_uniform/sub"
  op: "Sub"
  input: "Conv1/dropout/random_uniform/max"
  input: "Conv1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/random_uniform/mul"
  op: "Mul"
  input: "Conv1/dropout/random_uniform/RandomUniform"
  input: "Conv1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/random_uniform"
  op: "Add"
  input: "Conv1/dropout/random_uniform/mul"
  input: "Conv1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/add"
  op: "Add"
  input: "dropout"
  input: "Conv1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/Floor"
  op: "Floor"
  input: "Conv1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/div"
  op: "RealDiv"
  input: "Conv1/Relu"
  input: "dropout"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropout/mul"
  op: "Mul"
  input: "Conv1/dropout/div"
  input: "Conv1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/MaxPool"
  op: "MaxPool"
  input: "Conv1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Conv1/weights/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Conv1/weights"
      }
    }
  }
}
node {
  name: "Conv1/weights"
  op: "HistogramSummary"
  input: "Conv1/weights/tag"
  input: "Conv1/W1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/biases/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Conv1/biases"
      }
    }
  }
}
node {
  name: "Conv1/biases"
  op: "HistogramSummary"
  input: "Conv1/biases/tag"
  input: "Conv1/B1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/activations/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Conv1/activations"
      }
    }
  }
}
node {
  name: "Conv1/activations"
  op: "HistogramSummary"
  input: "Conv1/activations/tag"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/dropouts/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Conv1/dropouts"
      }
    }
  }
}
node {
  name: "Conv1/dropouts"
  op: "HistogramSummary"
  input: "Conv1/dropouts/tag"
  input: "Conv1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200.\001\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "Conv1/dropout/mul"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FC/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200.\001\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "FC/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "FC/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "FC/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "FC/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "FC/truncated_normal/mul"
  op: "Mul"
  input: "FC/truncated_normal/TruncatedNormal"
  input: "FC/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FC/truncated_normal"
  op: "Add"
  input: "FC/truncated_normal/mul"
  input: "FC/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FC/W3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 77440
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "FC/W3/Assign"
  op: "Assign"
  input: "FC/W3"
  input: "FC/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "FC/W3/read"
  op: "Identity"
  input: "FC/W3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
}
node {
  name: "FC/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "FC/B3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "FC/B3/Assign"
  op: "Assign"
  input: "FC/B3"
  input: "FC/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "FC/B3/read"
  op: "Identity"
  input: "FC/B3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
}
node {
  name: "FC/MatMul"
  op: "MatMul"
  input: "Reshape"
  input: "FC/W3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "FC/output"
  op: "Add"
  input: "FC/MatMul"
  input: "FC/B3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FC/weights/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "FC/weights"
      }
    }
  }
}
node {
  name: "FC/weights"
  op: "HistogramSummary"
  input: "FC/weights/tag"
  input: "FC/W3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FC/biases/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "FC/biases"
      }
    }
  }
}
node {
  name: "FC/biases"
  op: "HistogramSummary"
  input: "FC/biases/tag"
  input: "FC/B3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Shape"
  op: "Shape"
  input: "FC/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Shape_1"
  op: "Shape"
  input: "FC/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Sub"
  op: "Sub"
  input: "loss/Rank_1"
  input: "loss/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Slice/begin"
  op: "Pack"
  input: "loss/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Slice"
  op: "Slice"
  input: "loss/Shape_1"
  input: "loss/Slice/begin"
  input: "loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/concat"
  op: "ConcatV2"
  input: "loss/concat/values_0"
  input: "loss/Slice"
  input: "loss/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Reshape"
  op: "Reshape"
  input: "FC/output"
  input: "loss/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/Shape_2"
  op: "Shape"
  input: "label"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Sub_1"
  op: "Sub"
  input: "loss/Rank_2"
  input: "loss/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Slice_1/begin"
  op: "Pack"
  input: "loss/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Slice_1"
  op: "Slice"
  input: "loss/Shape_2"
  input: "loss/Slice_1/begin"
  input: "loss/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/concat_1"
  op: "ConcatV2"
  input: "loss/concat_1/values_0"
  input: "loss/Slice_1"
  input: "loss/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Reshape_1"
  op: "Reshape"
  input: "label"
  input: "loss/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/SoftmaxCrossEntropyWithLogits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/Reshape"
  input: "loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/Sub_2"
  op: "Sub"
  input: "loss/Rank"
  input: "loss/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Slice_2/size"
  op: "Pack"
  input: "loss/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/Slice_2"
  op: "Slice"
  input: "loss/Shape"
  input: "loss/Slice_2/begin"
  input: "loss/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Reshape_2"
  op: "Reshape"
  input: "loss/SoftmaxCrossEntropyWithLogits"
  input: "loss/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Mean"
  op: "Mean"
  input: "loss/Reshape_2"
  input: "loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/loss"
      }
    }
  }
}
node {
  name: "loss/loss"
  op: "ScalarSummary"
  input: "loss/loss/tags"
  input: "loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Fill"
  input: "train/gradients/loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Shape"
  op: "Shape"
  input: "loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/loss/Mean_grad/Reshape"
  input: "train/gradients/loss/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Shape_1"
  op: "Shape"
  input: "loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/loss/Mean_grad/Shape_1"
  input: "train/gradients/loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/loss/Mean_grad/Shape_2"
  input: "train/gradients/loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/loss/Mean_grad/Prod_1"
  input: "train/gradients/loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/loss/Mean_grad/Prod"
  input: "train/gradients/loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/loss/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/loss/Mean_grad/Tile"
  input: "train/gradients/loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss/SoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/Mean_grad/truediv"
  input: "train/gradients/loss/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/loss/Reshape_2_grad/Reshape"
  input: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "loss/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/loss/Reshape_grad/Shape"
  op: "Shape"
  input: "FC/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/loss/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/loss/SoftmaxCrossEntropyWithLogits_grad/mul"
  input: "train/gradients/loss/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/Shape"
  op: "Shape"
  input: "FC/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/FC/output_grad/Shape"
  input: "train/gradients/FC/output_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/Sum"
  op: "Sum"
  input: "train/gradients/loss/Reshape_grad/Reshape"
  input: "train/gradients/FC/output_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/FC/output_grad/Sum"
  input: "train/gradients/FC/output_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/loss/Reshape_grad/Reshape"
  input: "train/gradients/FC/output_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/FC/output_grad/Sum_1"
  input: "train/gradients/FC/output_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/FC/output_grad/Reshape"
  input: "^train/gradients/FC/output_grad/Reshape_1"
}
node {
  name: "train/gradients/FC/output_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/FC/output_grad/Reshape"
  input: "^train/gradients/FC/output_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/FC/output_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/FC/output_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/FC/output_grad/Reshape_1"
  input: "^train/gradients/FC/output_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/FC/output_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/FC/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/FC/output_grad/tuple/control_dependency"
  input: "FC/W3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/FC/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape"
  input: "train/gradients/FC/output_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/FC/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/FC/MatMul_grad/MatMul"
  input: "^train/gradients/FC/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/FC/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/FC/MatMul_grad/MatMul"
  input: "^train/gradients/FC/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/FC/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/FC/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/FC/MatMul_grad/MatMul_1"
  input: "^train/gradients/FC/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/FC/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reshape_grad/Shape"
  op: "Shape"
  input: "Conv1/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/FC/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/Shape"
  op: "Shape"
  input: "Conv1/dropout/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/Shape_1"
  op: "Shape"
  input: "Conv1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/dropout/mul_grad/Shape"
  input: "train/gradients/Conv1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/Reshape_grad/Reshape"
  input: "Conv1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/dropout/mul_grad/mul"
  input: "train/gradients/Conv1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/dropout/mul_grad/Sum"
  input: "train/gradients/Conv1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Conv1/dropout/div"
  input: "train/gradients/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/dropout/mul_grad/mul_1"
  input: "train/gradients/Conv1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/dropout/mul_grad/Sum_1"
  input: "train/gradients/Conv1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/dropout/mul_grad/Reshape"
  input: "^train/gradients/Conv1/dropout/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/dropout/mul_grad/Reshape"
  input: "^train/gradients/Conv1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/dropout/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/dropout/mul_grad/Reshape_1"
  input: "^train/gradients/Conv1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/dropout/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Shape"
  op: "Shape"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Shape_1"
  op: "Shape"
  input: "dropout"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/dropout/div_grad/Shape"
  input: "train/gradients/Conv1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/Conv1/dropout/mul_grad/tuple/control_dependency"
  input: "dropout"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/dropout/div_grad/RealDiv"
  input: "train/gradients/Conv1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/dropout/div_grad/Sum"
  input: "train/gradients/Conv1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Neg"
  op: "Neg"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/Conv1/dropout/div_grad/Neg"
  input: "dropout"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/Conv1/dropout/div_grad/RealDiv_1"
  input: "dropout"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/mul"
  op: "Mul"
  input: "train/gradients/Conv1/dropout/mul_grad/tuple/control_dependency"
  input: "train/gradients/Conv1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/dropout/div_grad/mul"
  input: "train/gradients/Conv1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/dropout/div_grad/Sum_1"
  input: "train/gradients/Conv1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/dropout/div_grad/Reshape"
  input: "^train/gradients/Conv1/dropout/div_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/dropout/div_grad/Reshape"
  input: "^train/gradients/Conv1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/dropout/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/dropout/div_grad/Reshape_1"
  input: "^train/gradients/Conv1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/dropout/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/Conv1/dropout/div_grad/tuple/control_dependency"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "Conv1/bn/batchnorm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Shape"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/Relu_grad/ReluGrad"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Sum"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/Relu_grad/ReluGrad"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Sum_1"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "Conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Shape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "Conv1/bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/mul"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "Conv1/add"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/mul_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Sum_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Shape"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Sum"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Neg"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Shape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "Conv1/bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/mul"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "Conv1/bn/cond/Merge"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/mul_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Sum_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/cond/Merge_grad/cond_grad"
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/cond/Merge_grad/cond_grad"
  input: "^train/gradients/Conv1/bn/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/cond/Merge_grad/cond_grad:1"
  input: "^train/gradients/Conv1/bn/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Shape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "train/gradients/AddN"
  input: "Conv1/bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/mul"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "Conv1/bn/batchnorm/Rsqrt"
  input: "train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/mul_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Sum_1"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "Conv1/bn/batchnorm/Rsqrt"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Switch"
  op: "Switch"
  input: "Conv1/bn/moments/Squeeze"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_1"
  op: "Shape"
  input: "train/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros"
  op: "Fill"
  input: "train/gradients/Shape_1"
  input: "train/gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/Conv1/bn/cond/Merge_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Shape"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Sum"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Sum_1"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
  input: "^train/gradients/Conv1/bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg/sub_1/Switch_1_grad/cond_grad"
  input: "train/gradients/Conv1/bn/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_1_grad/cond_grad"
  op: "Switch"
  input: "train/gradients/Conv1/bn/batchnorm/add_grad/tuple/control_dependency"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/cond/Merge_1_grad/cond_grad"
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/cond/Merge_1_grad/cond_grad"
  input: "^train/gradients/Conv1/bn/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/cond/Merge_1_grad/cond_grad:1"
  input: "^train/gradients/Conv1/bn/cond/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/Squeeze_grad/Reshape"
  input: "train/gradients/Conv1/bn/moments/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Sum"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/Squeeze_grad/Reshape"
  input: "train/gradients/Conv1/bn/moments/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Sum_1"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/moments/mean_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/mean_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/mean_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/mean_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/moments/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/mean_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Switch_1"
  op: "Switch"
  input: "Conv1/bn/moments/Squeeze_1"
  input: "Conv1/bn/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Shape_2"
  op: "Shape"
  input: "train/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/zeros_1"
  op: "Fill"
  input: "train/gradients/Shape_2"
  input: "train/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "train/gradients/Conv1/bn/cond/Merge_1_grad/tuple/control_dependency_1"
  input: "train/gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/cond/ExponentialMovingAverage/AssignMovingAvg_1/sub_1/Switch_1_grad/cond_grad"
  input: "train/gradients/Conv1/bn/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/Squeeze_1_grad/Reshape"
  input: "train/gradients/Conv1/bn/moments/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Sum"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/Squeeze_1_grad/Reshape"
  input: "train/gradients/Conv1/bn/moments/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Neg"
  op: "Neg"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Neg"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/moments/variance_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/variance_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/variance_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/variance_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/moments/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/variance_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape"
  op: "Shape"
  input: "Conv1/bn/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/add"
  op: "Add"
  input: "Conv1/bn/moments/Mean_1/reduction_indices"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/mod"
  op: "FloorMod"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/add"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/range"
  op: "Range"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/range/start"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Size"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Fill"
  op: "Fill"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape_1"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/range"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/mod"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/DynamicStitch"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/variance_grad/tuple/control_dependency"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Reshape"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape_2"
  op: "Shape"
  input: "Conv1/bn/moments/SquaredDifference"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Prod"
  op: "Prod"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape_2"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Shape_3"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Prod_1"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Prod"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/Cast"
  op: "Cast"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Tile"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Square_grad/mul/x"
  op: "Const"
  input: "^train/gradients/Conv1/bn/moments/variance_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Square_grad/mul"
  op: "Mul"
  input: "train/gradients/Conv1/bn/moments/Square_grad/mul/x"
  input: "Conv1/bn/moments/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Square_grad/mul_1"
  op: "Mul"
  input: "train/gradients/Conv1/bn/moments/variance_grad/tuple/control_dependency_1"
  input: "train/gradients/Conv1/bn/moments/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "Conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^train/gradients/Conv1/bn/moments/Mean_1_grad/truediv"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/scalar"
  input: "train/gradients/Conv1/bn/moments/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "Conv1/add"
  input: "Conv1/bn/moments/StopGradient"
  input: "^train/gradients/Conv1/bn/moments/Mean_1_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/mul"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Sum"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/mul_1"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Sum_1"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/moments/SquaredDifference_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/SquaredDifference_grad/Neg"
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/Neg"
  input: "^train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/Conv1/bn/moments/mean_grad/tuple/control_dependency"
  input: "train/gradients/Conv1/bn/moments/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/mean_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape"
  op: "Shape"
  input: "Conv1/bn/moments/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/add"
  op: "Add"
  input: "Conv1/bn/moments/shifted_mean/reduction_indices"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/mod"
  op: "FloorMod"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/add"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/range"
  op: "Range"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/range/start"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Size"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Fill"
  op: "Fill"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape_1"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/range"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/mod"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum"
  op: "Maximum"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/DynamicStitch"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/floordiv"
  op: "FloorDiv"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/AddN_1"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Tile"
  op: "Tile"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Reshape"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape_2"
  op: "Shape"
  input: "Conv1/bn/moments/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Prod"
  op: "Prod"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape_2"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Prod_1"
  op: "Prod"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Shape_3"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum_1"
  op: "Maximum"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Prod_1"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Prod"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Cast"
  op: "Cast"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/shifted_mean_grad/truediv"
  op: "RealDiv"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Tile"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Shape"
  op: "Shape"
  input: "Conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Shape"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Sum"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/truediv"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Sum"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/Conv1/bn/moments/shifted_mean_grad/truediv"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Neg"
  op: "Neg"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Neg"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/bn/moments/Sub_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/Sub_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Reshape"
  input: "^train/gradients/Conv1/bn/moments/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/Sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/bn/moments/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/Reshape_1"
  input: "^train/gradients/Conv1/bn/moments/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/Sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/Conv1/bn/moments/mean_grad/tuple/control_dependency_1"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/moments/mean_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/Conv1/bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "train/gradients/Conv1/bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "train/gradients/Conv1/bn/moments/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/Shape"
  op: "Shape"
  input: "Conv1/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 44
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/Conv1/add_grad/Shape"
  input: "train/gradients/Conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_3"
  input: "train/gradients/Conv1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/Conv1/add_grad/Sum"
  input: "train/gradients/Conv1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_3"
  input: "train/gradients/Conv1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/Conv1/add_grad/Sum_1"
  input: "train/gradients/Conv1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/add_grad/Reshape"
  input: "^train/gradients/Conv1/add_grad/Reshape_1"
}
node {
  name: "train/gradients/Conv1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/add_grad/Reshape"
  input: "^train/gradients/Conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/add_grad/Reshape_1"
  input: "^train/gradients/Conv1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/Shape"
  op: "Shape"
  input: "Conv1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv1/Conv2D_grad/Shape"
  input: "Conv1/W1/read"
  input: "train/gradients/Conv1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\014\000\000\000\010\000\000\000\001\000\000\000,\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Conv1/Reshape"
  input: "train/gradients/Conv1/Conv2D_grad/Shape_1"
  input: "train/gradients/Conv1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "Conv1/W1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/W1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/W1/Adam/Assign"
  op: "Assign"
  input: "Conv1/W1/Adam"
  input: "Conv1/W1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/W1/Adam/read"
  op: "Identity"
  input: "Conv1/W1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "Conv1/W1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/W1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
        dim {
          size: 8
        }
        dim {
          size: 1
        }
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/W1/Adam_1/Assign"
  op: "Assign"
  input: "Conv1/W1/Adam_1"
  input: "Conv1/W1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/W1/Adam_1/read"
  op: "Identity"
  input: "Conv1/W1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "Conv1/B1/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/B1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/B1/Adam/Assign"
  op: "Assign"
  input: "Conv1/B1/Adam"
  input: "Conv1/B1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/B1/Adam/read"
  op: "Identity"
  input: "Conv1/B1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
}
node {
  name: "Conv1/B1/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/B1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/B1/Adam_1/Assign"
  op: "Assign"
  input: "Conv1/B1/Adam_1"
  input: "Conv1/B1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/B1/Adam_1/read"
  op: "Identity"
  input: "Conv1/B1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam/Assign"
  op: "Assign"
  input: "Conv1/bn/beta/Adam"
  input: "Conv1/bn/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam/read"
  op: "Identity"
  input: "Conv1/bn/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam_1/Assign"
  op: "Assign"
  input: "Conv1/bn/beta/Adam_1"
  input: "Conv1/bn/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/beta/Adam_1/read"
  op: "Identity"
  input: "Conv1/bn/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam/Assign"
  op: "Assign"
  input: "Conv1/bn/gamma/Adam"
  input: "Conv1/bn/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam/read"
  op: "Identity"
  input: "Conv1/bn/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 44
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 44
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam_1/Assign"
  op: "Assign"
  input: "Conv1/bn/gamma/Adam_1"
  input: "Conv1/bn/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bn/gamma/Adam_1/read"
  op: "Identity"
  input: "Conv1/bn/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
}
node {
  name: "FC/W3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 77440
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "FC/W3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 77440
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "FC/W3/Adam/Assign"
  op: "Assign"
  input: "FC/W3/Adam"
  input: "FC/W3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "FC/W3/Adam/read"
  op: "Identity"
  input: "FC/W3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
}
node {
  name: "FC/W3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 77440
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "FC/W3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 77440
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "FC/W3/Adam_1/Assign"
  op: "Assign"
  input: "FC/W3/Adam_1"
  input: "FC/W3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "FC/W3/Adam_1/read"
  op: "Identity"
  input: "FC/W3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
}
node {
  name: "FC/B3/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "FC/B3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "FC/B3/Adam/Assign"
  op: "Assign"
  input: "FC/B3/Adam"
  input: "FC/B3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "FC/B3/Adam/read"
  op: "Identity"
  input: "FC/B3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
}
node {
  name: "FC/B3/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "FC/B3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "FC/B3/Adam_1/Assign"
  op: "Assign"
  input: "FC/B3/Adam_1"
  input: "FC/B3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "FC/B3/Adam_1/read"
  op: "Identity"
  input: "FC/B3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
}
node {
  name: "train/Adam/learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_Conv1/W1/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv1/W1"
  input: "Conv1/W1/Adam"
  input: "Conv1/W1/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv1/B1/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv1/B1"
  input: "Conv1/B1/Adam"
  input: "Conv1/B1/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/B1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv1/bn/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv1/bn/beta"
  input: "Conv1/bn/beta/Adam"
  input: "Conv1/bn/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv1/bn/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv1/bn/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv1/bn/gamma"
  input: "Conv1/bn/gamma/Adam"
  input: "Conv1/bn/gamma/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv1/bn/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_FC/W3/ApplyAdam"
  op: "ApplyAdam"
  input: "FC/W3"
  input: "FC/W3/Adam"
  input: "FC/W3/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/FC/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/W3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_FC/B3/ApplyAdam"
  op: "ApplyAdam"
  input: "FC/B3"
  input: "FC/B3/Adam"
  input: "FC/B3/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/Adam/learning_rate"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/FC/output_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FC/B3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_Conv1/W1/ApplyAdam"
  input: "^train/Adam/update_Conv1/B1/ApplyAdam"
  input: "^train/Adam/update_Conv1/bn/beta/ApplyAdam"
  input: "^train/Adam/update_Conv1/bn/gamma/ApplyAdam"
  input: "^train/Adam/update_FC/W3/ApplyAdam"
  input: "^train/Adam/update_FC/B3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_Conv1/W1/ApplyAdam"
  input: "^train/Adam/update_Conv1/B1/ApplyAdam"
  input: "^train/Adam/update_Conv1/bn/beta/ApplyAdam"
  input: "^train/Adam/update_Conv1/bn/gamma/ApplyAdam"
  input: "^train/Adam/update_FC/W3/ApplyAdam"
  input: "^train/Adam/update_FC/B3/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/W1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/update_Conv1/W1/ApplyAdam"
  input: "^train/Adam/update_Conv1/B1/ApplyAdam"
  input: "^train/Adam/update_Conv1/bn/beta/ApplyAdam"
  input: "^train/Adam/update_Conv1/bn/gamma/ApplyAdam"
  input: "^train/Adam/update_FC/W3/ApplyAdam"
  input: "^train/Adam/update_FC/B3/ApplyAdam"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
}
node {
  name: "accuracy/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/ArgMax"
  op: "ArgMax"
  input: "FC/output"
  input: "accuracy/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/ArgMax_1"
  op: "ArgMax"
  input: "label"
  input: "accuracy/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/Equal"
  op: "Equal"
  input: "accuracy/ArgMax"
  input: "accuracy/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "accuracy/Cast"
  op: "Cast"
  input: "accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/Mean"
  op: "Mean"
  input: "accuracy/Cast"
  input: "accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "accuracy/confusion_matrix/stack_1"
  op: "Pack"
  input: "accuracy/ArgMax_1"
  input: "accuracy/ArgMax"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/Rank"
  op: "Rank"
  input: "accuracy/confusion_matrix/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/sub"
  op: "Sub"
  input: "accuracy/confusion_matrix/transpose/Rank"
  input: "accuracy/confusion_matrix/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/Range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/Range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/Range"
  op: "Range"
  input: "accuracy/confusion_matrix/transpose/Range/start"
  input: "accuracy/confusion_matrix/transpose/Rank"
  input: "accuracy/confusion_matrix/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose/sub_1"
  op: "Sub"
  input: "accuracy/confusion_matrix/transpose/sub"
  input: "accuracy/confusion_matrix/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/transpose"
  op: "Transpose"
  input: "accuracy/confusion_matrix/stack_1"
  input: "accuracy/confusion_matrix/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "accuracy/ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/confusion_matrix/ones_like"
  op: "Fill"
  input: "accuracy/confusion_matrix/ones_like/Shape"
  input: "accuracy/confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/ToInt64"
  op: "Cast"
  input: "accuracy/confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/confusion_matrix/zeros"
  op: "Fill"
  input: "accuracy/confusion_matrix/stack"
  input: "accuracy/confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "accuracy/confusion_matrix/transpose"
  input: "accuracy/confusion_matrix/ones_like"
  input: "accuracy/confusion_matrix/ToInt64"
  input: "accuracy/confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "accuracy/accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy/accuracy"
      }
    }
  }
}
node {
  name: "accuracy/accuracy"
  op: "ScalarSummary"
  input: "accuracy/accuracy/tags"
  input: "accuracy/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Conv1/weights"
  input: "Conv1/biases"
  input: "Conv1/activations"
  input: "Conv1/dropouts"
  input: "FC/weights"
  input: "FC/biases"
  input: "loss/loss"
  input: "accuracy/accuracy"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Conv1/W1/Assign"
  input: "^Conv1/B1/Assign"
  input: "^Conv1/bn/beta/Assign"
  input: "^Conv1/bn/gamma/Assign"
  input: "^bn/Conv1/bn/moments/Squeeze/ExponentialMovingAverage/Assign"
  input: "^bn/Conv1/bn/moments/Squeeze_1/ExponentialMovingAverage/Assign"
  input: "^FC/W3/Assign"
  input: "^FC/B3/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
  input: "^Conv1/W1/Adam/Assign"
  input: "^Conv1/W1/Adam_1/Assign"
  input: "^Conv1/B1/Adam/Assign"
  input: "^Conv1/B1/Adam_1/Assign"
  input: "^Conv1/bn/beta/Adam/Assign"
  input: "^Conv1/bn/beta/Adam_1/Assign"
  input: "^Conv1/bn/gamma/Adam/Assign"
  input: "^Conv1/bn/gamma/Adam_1/Assign"
  input: "^FC/W3/Adam/Assign"
  input: "^FC/W3/Adam_1/Assign"
  input: "^FC/B3/Adam/Assign"
  input: "^FC/B3/Adam_1/Assign"
}
versions {
  producer: 22
}
